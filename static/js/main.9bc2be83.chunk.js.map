{"version":3,"sources":["Components/section/Section.js","Components/form/Form.js","Components/contactsList/contactItem/ContactItem.js","Components/contactsList/ContactsList.js","Components/filter/Filter.js","App/App.js","index.js"],"names":["Section","title","children","Form","_INITIAL_STATE_","name","number","state","handleChange","target","value","setState","trim","handleSubmit","e","preventDefault","incorrectName","props","contacts","some","i","toLowerCase","alert","addContact","this","type","onChange","mask","onClick","Component","StyledButton","styled","button","Contact","contact","onDelete","id","Contacts","filter","split","join","startsWith","map","ContactItem","Filter","App","prev","push","uuidv4","delContact","localStorage","getItem","JSON","parse","setItem","stringify","ContactsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bc2be83.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Section({title=\"Title of Section\", children}) {\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\nSection.propTypes = {\n    title: PropTypes.string,\n}\n\nexport default Section\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport InputMask from 'react-input-mask';\n\nexport default class Form extends Component {\n\n    static propTypes={\n        addContact: PropTypes.func.isRequired,\n        contacts: PropTypes.arrayOf(PropTypes.shape({\n        \tname: PropTypes.string.isRequired,\n        \tnumber: PropTypes.string.isRequired,\n        \tid: PropTypes.string.isRequired,\n        })).isRequired,\n    }\n\n    _INITIAL_STATE_={\n        name:\"\",\n        number: \"\",\n    }\n\n    state={...this._INITIAL_STATE_}\n\n    handleChange=({target:{name,value}})=>{\n        this.setState({[name]: value.trim()})\n    }\n\n    handleSubmit=(e)=>{\n        e.preventDefault()  \n\n        let incorrectName = false\n\n        const {name,number}=this.state\n\n        if(this.props.contacts.some(i=>{\n            incorrectName = i.name.toLowerCase()===name.toLowerCase()\n            return i.number===number || incorrectName\n        })){\n            incorrectName ?\n            alert(\"This person is already exist.\") :\n            alert(\"This phone is already exist.\")\n        }     \n\n        this.props.addContact(name,number)\n            \n        this.setState({...this._INITIAL_STATE_})\n    }\n\n    render() {\n        return(\n            <form>\n                <label>\n                    <h3>Name</h3>\n                    <input value={this.state.name} type=\"text\" name=\"name\" onChange={this.handleChange}/>\n                </label>\n                <label>\n                    <h3>Number</h3>\n                    <InputMask mask=\"+99(999)-99-99\" value={this.state.number} type=\"tel\" name=\"number\" onChange={this.handleChange}/>\n                </label>\n                <button type=\"submit\" onClick={this.handleSubmit}>Add contact</button>\n            </form>\n        )\n    } \n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledButton=styled.button`\n    display: 'inline-block',\n    color: 'red',\n`\n\nfunction Contact({contact, onDelete}) {\n    return (\n        <li>\n            <span>{contact.name}: {contact.number}</span>\n            <StyledButton id={contact.id} onClick={onDelete}>delete</StyledButton>\n        </li>\n    )\n}\n\nContact.propTypes = {\n    contact: PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired,\n    }).isRequired,\n    onDelete: PropTypes.func.isRequired\n}\n\nexport default Contact\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ContactItem from './contactItem/ContactItem';\n\nfunction Contacts({contacts, onDelete, filter}) {\n    filter=filter.split(\" \").join(\"\").toLowerCase()\n    contacts=contacts.filter(i=>i.name.toLowerCase().startsWith(filter))\n    return (\n        <ul>\n            {contacts.map(contact=>(\n                <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\n            ))}\n        </ul>\n    )\n}\n\nContacts.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id:PropTypes.string.isRequired,\n        name:PropTypes.string.isRequired,\n        number:PropTypes.string.isRequired,\n    })).isRequired,\n    onDelete: PropTypes.func.isRequired,\n    filter:PropTypes.string.isRequired\n}\n\nexport default Contacts\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction Filter({onChange, value}) {\n    return (\n\n        <>\n            <h4>Contacts filter</h4>\n            <input value={value} name=\"filter\" type=\"text\" onChange={onChange} />\n        </>\n    )\n}\n\nFilter.propTypes = {\n    onChange:PropTypes.func.isRequired,\n    value:PropTypes.string.isRequired\n}\n\nexport default Filter\n\n","import React, { Component } from 'react'\nimport Section from '../Components/section/Section';\nimport Form from '../Components/form/Form';\nimport {v4 as uuidv4} from 'uuid'\nimport ContactsList from '../Components/contactsList/ContactsList';\nimport Filter from '../Components/filter/Filter';\n\nexport class App extends Component {\n\n    _INITIAL_STATE_={\n        contacts: [],\n        filter: ''\n    }\n\n    state={...this._INITIAL_STATE_}\n\n    addContact=(name,number)=>{        \n        this.setState(prev=>{\n            prev.contacts.push({id:uuidv4(),name,number})\n            return prev\n        })\n    }\n\n    delContact=(e)=>{\n        this.setState(prev=>({contacts: prev.contacts.filter(i=>i.id!==e.target.id)}))\n    }\n\n    filter=(e)=>{\n        this.setState({filter: e.target.value.trim()})\n    }\n\n    componentDidMount(){\n        if(localStorage.getItem(\"contacts\")) \n            this.setState({contacts:JSON.parse(localStorage.getItem(\"contacts\"))})\n    }\n    componentDidUpdate(){\n        localStorage.setItem(\"contacts\",JSON.stringify(this.state.contacts))\n    }\n\n    render() {           \n        return (\n            <>\n                <h1>Phonebook</h1>\n                <Section title=\"\">\n                    <Form addContact={this.addContact} contacts={this.state.contacts}/>\n                </Section>\n                <Section title=\"Contacts\">\n                    <Filter value={this.state.filter} onChange={this.filter}/>\n                    <ContactsList \n                        contacts={this.state.contacts} \n                        onDelete={this.delContact} \n                        filter={this.state.filter}\n                    />\n                </Section>\n            </>\n        )\n    }\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './globalStyles.css';\nimport App from './App/App'\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}